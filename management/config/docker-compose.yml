version: '3.8'

services:
  # Chronicle中央医院服务
  chronicle:
    build:
      context: ../../systems/chronicle
      dockerfile: Dockerfile
    container_name: chronicle-hospital
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DB_PATH=/data/chronicle.db
      - LOG_LEVEL=info
      - API_PORT=3000
      - CORS_ORIGIN=http://localhost:8501
    volumes:
      - chronicle_data:/data
      - chronicle_logs:/app/logs
    networks:
      - federation_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # RAG智能系统服务
  rag-system:
    build:
      context: ../../systems/rag-system
      dockerfile: Dockerfile
    container_name: rag-intelligence
    ports:
      - "8501:8501"
    environment:
      - CHRONICLE_URL=http://chronicle:3000
      - PYTHONPATH=/app
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_SERVER_ENABLE_CORS=true
      - STREAMLIT_SERVER_ENABLE_XSRF_PROTECTION=false
    depends_on:
      chronicle:
        condition: service_healthy
    volumes:
      - rag_data:/app/data
      - rag_logs:/app/logs
      - rag_models:/app/models
    networks:
      - federation_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx反向代理 (可选)
  nginx:
    image: nginx:alpine
    container_name: federation-gateway
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - chronicle
      - rag-system
    networks:
      - federation_network
    restart: unless-stopped
    profiles:
      - production

volumes:
  chronicle_data:
    driver: local
  chronicle_logs:
    driver: local
  rag_data:
    driver: local
  rag_logs:
    driver: local
  rag_models:
    driver: local
  nginx_logs:
    driver: local

networks:
  federation_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16