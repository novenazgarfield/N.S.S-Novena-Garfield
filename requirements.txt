# 🧠 N.S.S-Novena-Garfield Genesis Project 依赖配置
# 中央情报大脑系统 v2.0.0-Genesis-Chapter6
# 基于"大宪章"六章构建的自我进化AI系统依赖
# 
# 安装方式：pip install -r requirements.txt
# 更新时间：2025-08-29
# 项目状态：Genesis项目完成 ✅

# ============================================================================
# 🧠 Genesis中央情报大脑核心依赖
# ============================================================================
streamlit>=1.28.0              # 主界面框架
pandas>=2.0.0                  # 数据处理核心
numpy>=1.24.0                  # 数值计算基础
sqlite3                        # 内置数据库 (Python标准库)

# ============================================================================
# 🤖 AI与机器学习核心 (Genesis大脑)
# ============================================================================

# --- 深度学习与嵌入模型 ---
tensorflow>=2.19.1             # TensorFlow深度学习框架
sentence-transformers>=5.1.0   # 句子嵌入模型 (核心)
torch>=2.0.0                   # PyTorch深度学习框架
transformers>=4.30.0           # Hugging Face Transformers

# --- 自然语言处理 ---
nltk>=3.8.0                    # 自然语言处理工具包
spacy>=3.4.0                   # 高级NLP库
textstat>=0.7.0                # 文本统计分析

# --- 知识图谱与图分析 ---
networkx>=3.0.0                # 图分析库 (记忆星图)
matplotlib>=3.5.0              # 图谱可视化
plotly>=5.15.0                 # 交互式图表

# ============================================================================
# 🌐 Web框架与API (传统系统支持)
# ============================================================================
fastapi>=0.104.0               # API服务框架
uvicorn>=0.24.0                # ASGI服务器
flask>=2.3.0                   # 轻量级Web框架
flask-cors>=4.0.0              # CORS支持
websockets>=12.0               # WebSocket支持

# ============================================================================
# 🤖 人工智能与机器学习 (RAG + Bovine + Genome)
# ============================================================================

# --- 深度学习框架 ---
torch>=2.0.0                   # PyTorch深度学习框架
torchvision>=0.15.0            # 计算机视觉
tensorflow>=2.8.0              # TensorFlow (Genome系统)

# --- 自然语言处理 ---
transformers>=4.30.0           # Hugging Face Transformers
sentence-transformers>=2.2.2   # 句子嵌入模型
tiktoken>=0.5.0                # OpenAI分词器
llama-cpp-python>=0.2.0        # LLaMA模型支持
accelerate>=0.20.0             # 模型加速
sentencepiece>=0.1.99          # 分词器

# --- 向量数据库与检索 ---
faiss-cpu>=1.7.4               # Facebook AI相似性搜索
# faiss-gpu>=1.7.4             # GPU版本 (可选)

# --- 计算机视觉 ---
opencv-python>=4.5.0           # OpenCV计算机视觉
ultralytics>=8.0.0             # YOLO目标检测
pytesseract>=0.3.8             # OCR文字识别
easyocr>=1.6.0                 # 简易OCR
imageio>=2.9.0                 # 图像IO
albumentations>=1.3.0          # 数据增强
timm>=0.9.0                    # 图像模型库
kornia>=0.6.12                 # 可微分计算机视觉
imgaug>=0.4.0                  # 图像增强
augly>=1.0.0                   # 数据增强

# ============================================================================
# 🧬 生物信息学 (Genome系统专用)
# ============================================================================
biopython>=1.79                # 生物信息学工具包
pysam>=0.19.0                  # SAM/BAM文件处理
cyvcf2>=0.30.0                 # VCF文件处理
HTSeq>=2.0.0                   # 高通量测序数据分析

# ============================================================================
# 📊 数据科学与分析
# ============================================================================

# --- 核心数据处理 ---
numpy>=1.24.0                  # 数值计算基础
pandas>=2.0.0                  # 数据分析
scipy>=1.7.0                   # 科学计算
scikit-learn>=1.3.0            # 机器学习算法

# --- 数据可视化 ---
matplotlib>=3.5.0              # 基础绘图
seaborn>=0.11.0                # 统计可视化
plotly>=5.15.0                 # 交互式图表
bokeh>=2.4.0                   # Web可视化
dash>=2.10.0                   # 交互式Web应用

# ============================================================================
# 📄 文档处理 (RAG系统)
# ============================================================================
PyMuPDF>=1.23.0                # PDF处理 (fitz)
python-docx>=0.8.11            # Word文档处理
python-pptx>=0.6.21            # PowerPoint处理
openpyxl>=3.1.0                # Excel处理
beautifulsoup4>=4.12.0         # HTML解析

# ============================================================================
# 🗄️ 数据库与存储
# ============================================================================
sqlalchemy>=1.4.0              # ORM框架
psycopg2-binary>=2.9.0         # PostgreSQL连接器
pymongo>=4.0.0                 # MongoDB连接器
redis>=4.0.0                   # Redis缓存

# ============================================================================
# ⚡ 并行计算与任务队列
# ============================================================================
celery>=5.2.0                  # 分布式任务队列
dask>=2022.3.0                 # 并行计算
joblib>=1.3.0                  # 并行处理
psutil>=5.9.0                  # 系统监控
memory-profiler>=0.60.0        # 内存分析

# ============================================================================
# 🔧 工具库与实用程序
# ============================================================================

# --- 配置与环境 ---
pyyaml>=6.0                    # YAML配置文件
python-dotenv>=0.19.0          # 环境变量管理
python-dateutil>=2.8.0         # 日期时间处理

# --- 日志与调试 ---
loguru>=0.6.0                  # 现代日志库

# --- 网络请求 ---
requests>=2.27.0               # HTTP请求
aiohttp>=3.8.0                 # 异步HTTP

# --- 进度与界面 ---
tqdm>=4.62.0                   # 进度条
click>=8.0.0                   # 命令行界面

# --- 图像处理 ---
Pillow>=8.0.0                  # Python图像库

# --- 数学计算 ---
sympy>=1.8.0                   # 符号数学
einops>=0.6.0                  # 张量操作

# ============================================================================
# 🔬 模型优化与部署
# ============================================================================
optimum>=1.8.0                 # 模型优化
onnx>=1.14.0                   # 模型格式转换
onnxruntime>=1.15.0            # ONNX运行时
huggingface-hub>=0.15.0        # 模型仓库
safetensors>=0.3.0             # 安全张量格式

# ============================================================================
# 📈 监控与可视化
# ============================================================================
wandb>=0.15.0                  # 实验跟踪
tensorboard>=2.13.0            # TensorBoard可视化

# ============================================================================
# 🧪 开发与测试工具
# ============================================================================
pytest>=7.0.0                  # 测试框架
pytest-cov>=3.0.0              # 测试覆盖率
pytest-mock>=3.7.0             # 测试模拟
black>=22.0.0                  # 代码格式化
flake8>=4.0.0                  # 代码检查
mypy>=0.940                    # 类型检查
typing-extensions>=3.10.0      # 类型扩展

# ============================================================================
# 📚 文档生成
# ============================================================================
sphinx>=4.5.0                  # 文档生成
sphinx-rtd-theme>=1.0.0        # 文档主题

# ============================================================================
# 🐳 容器化支持
# ============================================================================
docker>=5.0.0                  # Docker Python SDK

# ============================================================================
# 💡 可选依赖 (根据需要启用)
# ============================================================================

# --- GPU加速 (如果有NVIDIA GPU) ---
# cupy-cuda11x>=9.0.0          # CUDA 11.x GPU加速
# cupy-cuda10x>=9.0.0          # CUDA 10.x GPU加速

# --- 高级模型支持 ---
# openai>=1.0.0                # OpenAI API
# anthropic>=0.3.0             # Anthropic Claude API

# ============================================================================
# 🧠 Genesis项目特殊说明
# ============================================================================
#
# 🌟 Genesis中央情报大脑系统要求：
#    - Python 3.12+ (强烈推荐)
#    - 内存: 最低4GB，推荐8GB+
#    - 存储: 最低2GB可用空间 (AI模型下载)
#    - 网络: 首次运行需要下载sentence-transformers模型
#
# 🛡️ 黑匣子与免疫系统：
#    - 独立SQLite数据库 (failure_log.db)
#    - 自动故障记录与免疫力开发
#    - 无需额外配置，开箱即用
#
# 🎯 火控系统与AI注意力控制：
#    - 基于sentence-transformers的向量检索
#    - Cross-Encoder重排序模型
#    - 三段式拨盘控制机制
#
# ============================================================================
# 📝 传统系统注意事项
# ============================================================================
# 
# 1. 某些依赖可能需要系统级安装：
#    - tesseract-ocr (用于pytesseract)
#    - ffmpeg (用于音视频处理)
#    - graphviz (用于图形可视化)
#
# 2. GPU支持：
#    - 如需GPU加速，请安装对应的CUDA版本
#    - 将faiss-cpu替换为faiss-gpu
#
# 3. 系统特定依赖：
#    - Windows: 可能需要Visual C++ Build Tools
#    - macOS: 可能需要Xcode Command Line Tools
#    - Linux: 通常开箱即用
#
# 4. Genesis系统内存要求：
#    - 最低4GB RAM用于基础功能
#    - 8GB+ RAM用于最佳性能
#    - 16GB+ RAM用于大型模型训练
#
# 5. 版本兼容性：
#    - Python 3.12+ Genesis项目推荐
#    - Python 3.8+ 传统系统兼容
#
# ============================================================================
# 🚀 快速启动Genesis系统
# ============================================================================
#
# 1. 安装依赖：
#    pip install -r requirements.txt
#
# 2. 启动中央情报大脑：
#    cd systems/rag-system
#    streamlit run intelligence_app.py --server.port 53837 --server.address 0.0.0.0
#
# 3. 访问系统：
#    http://localhost:53837
#
# 🎉 享受具备自我进化能力的AI大脑！